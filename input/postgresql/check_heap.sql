CREATE TABLE heaptest (a integer, b text);
 REVOKE ALL ON heaptest FROM PUBLIC;
  SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'rope');
  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 0, endblock := 0);
 SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 5, endblock := 8);
  SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'none');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'all-frozen');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'all-visible');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'None');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'All-Frozen');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'All-Visible');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'NONE');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'ALL-FROZEN');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'ALL-VISIBLE');
  INSERT INTO heaptest (a, b) (SELECT gs, repeat('x', gs) FROM generate_series(1,50) gs);
  SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'none');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'all-frozen');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'all-visible');
 SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 0, endblock := 0);
  CREATE ROLE regress_heaptest_role;
  SET ROLE regress_heaptest_role;
 SELECT * FROM verify_heapam(relation := 'heaptest');
 RESET ROLE;
  GRANT EXECUTE ON FUNCTION verify_heapam(regclass, boolean, boolean, text, bigint, bigint) TO regress_heaptest_role;
  SET ROLE regress_heaptest_role;
 SELECT * FROM verify_heapam(relation := 'heaptest');
 RESET ROLE;
  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 0, endblock := 10000);
 SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 10000, endblock := 11000);
  VACUUM (FREEZE, DISABLE_PAGE_SKIPPING) heaptest;
  SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'none');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'all-frozen');
 SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'all-visible');
 SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 0, endblock := 0);
  CREATE TABLE test_partitioned (a int, b text default repeat('x', 5000)) PARTITION BY list (a);
 SELECT * FROM verify_heapam('test_partitioned', startblock := NULL, endblock := NULL);
  CREATE TABLE test_partition partition OF test_partitioned FOR VALUES IN (1);
 SELECT * FROM verify_heapam('test_partition', startblock := NULL, endblock := NULL);
  INSERT INTO test_partitioned (a) (SELECT 1 FROM generate_series(1,1000) gs);
 SELECT * FROM verify_heapam('test_partition', startblock := NULL, endblock := NULL);
  CREATE INDEX test_index ON test_partition (a);
 SELECT * FROM verify_heapam('test_index', startblock := NULL, endblock := NULL);
  CREATE VIEW test_view AS SELECT 1;
 SELECT * FROM verify_heapam('test_view', startblock := NULL, endblock := NULL);
  CREATE SEQUENCE test_sequence;
 SELECT * FROM verify_heapam('test_sequence', startblock := NULL, endblock := NULL);
  CREATE FOREIGN DATA WRAPPER dummy;
 CREATE SERVER dummy_server FOREIGN DATA WRAPPER dummy;
 CREATE FOREIGN TABLE test_foreign_table () SERVER dummy_server;
 SELECT * FROM verify_heapam('test_foreign_table', startblock := NULL, endblock := NULL);
  DROP TABLE heaptest;
 DROP TABLE test_partition;
 DROP TABLE test_partitioned;
 DROP OWNED BY regress_heaptest_role;
 -- permissions DROP ROLE regress_heaptest_role;
 